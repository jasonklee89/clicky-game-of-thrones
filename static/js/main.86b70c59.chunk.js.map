{"version":3,"sources":["images/arya.jpg","components/PictureCard/index.js","components/Wrapper/index.js","components/Instructions/index.js","components/Header/index.js","characters.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PictureCard","props","react_default","a","createElement","className","onClick","handleClick","id","alt","name","src","image","Wrapper","children","Instructions","Jumbotron_default","class","display","Header","Navbar_default","bg","variant","sticky","Brand","href","Toggle","Collapse","Text","score","topScore","characters","AryaImg","count","App","state","shuffle","arr","sort","Math","random","resetCount","_this","map","character","Object","assign","increaseCount","gameOver","setState","console","log","concat","this","newCharacters","find","char","i","_this2","Fragment","components_Header","Container_default","components_Instructions","components_Wrapper","components_PictureCard","key","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.86b70c59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arya.c0a9236f.jpg\";","import React from \"react\";\nimport \"./style.css\";\n\nfunction PictureCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.handleClick(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  )\n};\n\nexport default PictureCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n};\n\nexport default Wrapper;\n","import React from \"react\";\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport \"./style.css\";\n\nfunction Instructions(props) {\n    return (\n        <Jumbotron className=\"text-center\">\n        <h1><i class=\"fas fa-crown\"></i> Clicky Game of Thrones <i class=\"fas fa-crown\"></i></h1>\n        <br/>\n        {/* Display informs user if they have guessed correctly */}\n        <h5>{props.display}</h5>\n      </Jumbotron>\n    )\n};\n\nexport default Instructions;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\n\nfunction Header(props) {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n            {/* Crown icon that refreshes the page */}\n            <Navbar.Brand id=\"title\" href=\"/\"><i class=\"fas fa-crown\"></i></Navbar.Brand>\n            <Navbar.Toggle />\n            {/* Scorekeepers on right side of header */}\n            <Navbar.Collapse className=\"justify-content-end\">\n                <Navbar.Text>\n                <div className=\"scores\">Score: {props.score} | Top Score: {props.topScore}</div>\n            </Navbar.Text>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n};\n\nexport default Header;","import AryaImg from './images/arya.jpg';\nexport default [\n    {\n        \"id\": 1,\n        \"name\": \"Arya Stark\",\n        \"image\": AryaImg,\n        \"count\": 0\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Lord Baelish\",\n        \"image\": \"/assets/images/baelish.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Brienne of Tarth\",\n        \"image\": \"/assets/images/brienne.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Daenerys Targaryen\",\n        \"image\": \"/assets/images/daenerys.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Hodor\",\n        \"image\": \"/assets/images/hodor.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Jaqen H'ghar\",\n        \"image\": \"/assets/images/jaqen.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Jon Snow\",\n        \"image\": \"/assets/images/jonsnow.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Sansa Stark\",\n        \"image\": \"/assets/images/sansa.png\",\n        \"count\": 0\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Syrio Forel\",\n        \"image\": \"/assets/images/syrio.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Theon Greyjoy\",\n        \"image\": \"/assets/images/theon.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 11,\n        \"name\": \"Tyrion Lannister\",\n        \"image\": \"/assets/images/tyrion.jpg\",\n        \"count\": 0\n    },\n    {\n        \"id\": 12,\n        \"name\": \"Lord Varys\",\n        \"image\": \"/assets/images/varys.jpg\",\n        \"count\": 0\n    }\n]","import React from 'react';\nimport PictureCard from \"./components/PictureCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Instructions from \"./components/Instructions\";\nimport Header from \"./components/Header\";\nimport characters from \"./characters.js\";\nimport Container from 'react-bootstrap/Container'\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    characters,\n    score: 0,\n    topScore: 0,\n    display: \"Click an image to begin!\"\n  };\n\n  // Function that shuffles an array\n  shuffle = arr => {\n    return arr.sort(() => Math.random() - 0.5);\n  };\n  // Resets character count\n  resetCount = () => {\n    return this.state.characters.map(character => {\n      return Object.assign({}, character, { count: 0 });\n    })\n  }\n  // Updates character count\n  increaseCount = (id) => {\n    return this.state.characters.map(character => {\n      if (character.id === id) {\n        return Object.assign({}, character, { count: character.count + 1 });\n      }\n      return character;\n    })\n  }\n\n  gameOver = () => {\n    // Updates topScore if score is greater than topScore\n    if (this.state.score > this.state.topScore) {\n      this.setState({topScore: this.state.score}, function() {\n        console.log(`Top Score: ${this.state.topScore}`);\n      })\n    }\n    this.shuffle(this.state.characters);\n    const newCharacters = this.resetCount();\n    // Resets score to 0, and displays \"incorrect\" message\n    this.setState({\n      characters: newCharacters,\n      score: 0,\n      display: \"You guessed incorrectly! Try and beat your top score!\"\n    }, function() {\n      // alert(`reset`)\n    })\n    return;\n  };\n  \n  handleClick = id => {\n    // Matches clicked id with characters id in array\n    this.state.characters.find((char, i) => {\n      if (char.id === id) {\n        // Adds 1 to characters count value if it = 0\n        if (this.state.characters[i].count === 0) {\n          const newCharacters = this.increaseCount(char.id);\n          console.log(`${newCharacters[i].name} Count: ${newCharacters[i].count}`);\n          // Shuffles image order\n          this.shuffle(newCharacters);\n          // Adds 1 to score and displays \"correct\" message\n          this.setState({\n            characters: newCharacters,\n            score: this.state.score + 1,\n            display: \"You guessed correctly!\"\n          }, function() {\n            console.log(`Score: ${this.state.score}`)\n          })\n          return true;\n        } else {\n          // If characters count value doesn't = 0, run gameOver function\n          this.gameOver();\n        }\n      }\n    })\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header score={this.state.score} \n          topScore={this.state.topScore} />\n        <Container>\n          <Instructions \n          display={this.state.display} />\n          <Wrapper>\n            {this.state.characters.map(character => (\n                <PictureCard\n                  handleClick={this.handleClick}\n                  id={character.id} \n                  key={character.id}\n                  image={character.image}\n                />\n            ))}\n          </Wrapper>\n        </Container>\n      </React.Fragment>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}